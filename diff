diff --git a/pom.xml b/pom.xml
index d120fd7..46ab07d 100644
--- a/pom.xml
+++ b/pom.xml
@@ -1,25 +1,23 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
 	<modelVersion>4.0.0</modelVersion>
 	<parent>
-		<groupId>org.jenkins-ci.plugins</groupId>
-		<artifactId>plugin</artifactId>
-		<version>1.465</version>
-	</parent>
+		<groupId>org.eclipse.hudson.plugins</groupId>
+		<artifactId>hudson-plugin-parent</artifactId>
+		<version>3.0.0</version>
+	<relativePath/>
+  </parent>
 	<!-- parent> <groupId>org.jvnet.hudson.plugins</groupId> <artifactId>hudson-plugin-parent</artifactId> 
 		<version>2.1.0</version> <relativePath>../pom.xml</relativePath> </parent -->
 
-	<artifactId>jenkins-multijob-plugin</artifactId>
-	<version>1.8</version>
-	<name>Jenkins Multijob plugin</name>
+	<groupId>org.hudsonci.plugins</groupId>
+  <artifactId>jenkins-multijob-plugin</artifactId>
+	<version>1.8-h-1-SNAPSHOT</version>
+	<name>Hudson Multijob plugin</name>
 	<description>Enabling full hierarchy of Jenkins jobs</description>
-	<url>http://wiki.jenkins-ci.org/display/JENKINS/Multijob+Plugin</url>
+	<url>http://wiki.hudson-ci.org/display/HUDSON/Multijob+Plugin</url>
 
-	<distributionManagement>
-		<repository>
-			<id>maven.jenkins-ci.org</id>
-			<url>http://maven.jenkins-ci.org/content/repositories/releases/</url>
-		</repository>
-	</distributionManagement>
+	
 
 
 	<developers>
@@ -41,25 +39,25 @@
 	</developers>
 
 	<scm>
-		<connection>scm:git:git://github.com:jenkinsci/tikal-multijob-plugin.git</connection>
-		<developerConnection>scm:git:git@github.com:jenkinsci/tikal-multijob-plugin.git</developerConnection>
-		<url>https://github.com/jenkinsci/tikal-multijob-plugin.git</url>
+		<connection>scm:git:git://github.com/hudson3-plugins/jenkins-multijob-plugin.git</connection>
+		<developerConnection>scm:git:git@github.com:hudson3-plugins/jenkins-multijob-plugin.git</developerConnection>
+		<url>https://github.com/hudson3-plugins/jenkins-multijob-plugin</url>
 	</scm>
 
 
 	<dependencies>
 		<dependency>
-			<groupId>org.jenkins-ci.main</groupId>
-			<artifactId>jenkins-war</artifactId>
+			<groupId>org.eclipse.hudson</groupId>
+			<artifactId>hudson-war</artifactId>
 			<type>war</type>
-			<version>${project.parent.version}</version>
+			<version>3.0.0</version>
 			<scope>test</scope>
 		</dependency>
 		
 		<dependency>
-			<groupId>org.jenkins-ci.plugins</groupId>
+			<groupId>org.hudsonci.plugins</groupId>
 			<artifactId>parameterized-trigger</artifactId>
-			<version>2.12</version>
+			<version>2.17-h-1</version>
 			<optional>true</optional>
 		</dependency>
 	</dependencies>
@@ -76,7 +74,7 @@
 							<pluginExecutions>
 								<pluginExecution>
 									<pluginExecutionFilter>
-										<groupId>org.jenkins-ci.tools</groupId>
+										<groupId>org.eclipse.hudson.tools</groupId>
 										<artifactId>maven-hpi-plugin</artifactId>
 										<versionRange>[1.74,)</versionRange>
 										<goals>
@@ -88,7 +86,7 @@
 										</goals>
 									</pluginExecutionFilter>
 									<action>
-										<ignore />
+										<ignore/>
 									</action>
 								</pluginExecution>
 								<pluginExecution>
@@ -102,7 +100,7 @@
 										</goals>
 									</pluginExecutionFilter>
 									<action>
-										<ignore />
+										<ignore/>
 									</action>
 								</pluginExecution>
 								<pluginExecution>
@@ -115,7 +113,7 @@
 										</goals>
 									</pluginExecutionFilter>
 									<action>
-										<ignore />
+										<ignore/>
 									</action>
 								</pluginExecution>
 								<pluginExecution>
@@ -128,7 +126,7 @@
 										</goals>
 									</pluginExecutionFilter>
 									<action>
-										<ignore />
+										<ignore/>
 									</action>
 								</pluginExecution>
 							</pluginExecutions>
@@ -139,12 +137,7 @@
 		</pluginManagement>
 	</build>
 
-	<repositories>
-		<repository>
-			<id>repo.jenkins-ci.org</id>
-			<url>http://repo.jenkins-ci.org/public/</url>
-		</repository>
-	</repositories>
+	
 
 	<pluginRepositories>
 		<pluginRepository>
@@ -153,4 +146,14 @@
 		</pluginRepository>
 	</pluginRepositories>
 	<packaging>hpi</packaging>
+<licenses>
+    <license>
+      <name>The MIT license</name>
+      <url>http://opensource.org/licenses/MIT</url>
+      <distribution>repo</distribution>
+    </license>
+  </licenses>
+  <properties>
+    <hudsonTags>misc</hudsonTags>
+  </properties>
 </project>
diff --git a/src/main/java/com/tikal/jenkins/plugins/multijob/MultiJobBuild.java b/src/main/java/com/tikal/jenkins/plugins/multijob/MultiJobBuild.java
index a5f0e95..78e94b4 100644
--- a/src/main/java/com/tikal/jenkins/plugins/multijob/MultiJobBuild.java
+++ b/src/main/java/com/tikal/jenkins/plugins/multijob/MultiJobBuild.java
@@ -86,7 +86,7 @@ public class MultiJobBuild extends Build<MultiJobProject, MultiJobBuild> {
 				subBuild.setDuration(build.getDurationString());
 				subBuild.setUrl(build.getUrl());
 			} else {
-				subBuild.setIcon(BallColor.NOTBUILT.getImage());
+				subBuild.setIcon(BallColor.GREY.getImage());
 				subBuild.setDuration("not built yet");
 				subBuild.setUrl(null);
 			}
diff --git a/src/main/java/com/tikal/jenkins/plugins/multijob/MultiJobChangeLogSet.java b/src/main/java/com/tikal/jenkins/plugins/multijob/MultiJobChangeLogSet.java
index 801b9a0..36a641a 100644
--- a/src/main/java/com/tikal/jenkins/plugins/multijob/MultiJobChangeLogSet.java
+++ b/src/main/java/com/tikal/jenkins/plugins/multijob/MultiJobChangeLogSet.java
@@ -5,6 +5,8 @@ import java.util.Iterator;
 import hudson.model.AbstractBuild;
 import hudson.scm.ChangeLogSet;
 import hudson.scm.ChangeLogSet.Entry;
+import java.util.Collection;
+import java.util.Collections;
 
 public class MultiJobChangeLogSet extends ChangeLogSet<ChangeLogSet.Entry> {
 
@@ -29,4 +31,9 @@ public class MultiJobChangeLogSet extends ChangeLogSet<ChangeLogSet.Entry> {
 		
 	}
 
+  @Override
+  public Collection<Entry> getLogs() {
+    return Collections.EMPTY_LIST;
+  }
+
 }
diff --git a/src/main/java/com/tikal/jenkins/plugins/multijob/PhaseJobsConfig.java b/src/main/java/com/tikal/jenkins/plugins/multijob/PhaseJobsConfig.java
index c484765..579d3c1 100644
--- a/src/main/java/com/tikal/jenkins/plugins/multijob/PhaseJobsConfig.java
+++ b/src/main/java/com/tikal/jenkins/plugins/multijob/PhaseJobsConfig.java
@@ -14,6 +14,7 @@ import hudson.model.AbstractProject;
 import hudson.model.BooleanParameterDefinition;
 import hudson.model.ChoiceParameterDefinition;
 import hudson.model.Descriptor;
+import hudson.model.DescriptorByNameOwner;
 import hudson.model.FileParameterValue;
 import hudson.model.Hudson;
 import hudson.model.ParameterDefinition;
@@ -34,9 +35,12 @@ import java.util.LinkedHashMap;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
+import org.kohsuke.stapler.Ancestor;
 
 import org.kohsuke.stapler.DataBoundConstructor;
 import org.kohsuke.stapler.QueryParameter;
+import org.kohsuke.stapler.Stapler;
+import org.kohsuke.stapler.StaplerRequest;
 
 //import com.tikal.jenkins.plugins.multijob.scm.MultiJobScm;
 
@@ -207,9 +211,15 @@ public class PhaseJobsConfig implements Describable<PhaseJobsConfig> {
 			}
 
 		}
+    
+    private String getCurrentDescriptorByNameUrl() {
+      StaplerRequest req = Stapler.getCurrentRequest();
+      Ancestor a = req.findAncestor(DescriptorByNameOwner.class);
+      return a.getUrl();
+    }
 
 		private AbstractProject getCurrentJob() {
-			String nameUrl = Descriptor.getCurrentDescriptorByNameUrl();
+			String nameUrl = getCurrentDescriptorByNameUrl();
 			String jobName = nameUrl.substring(nameUrl.lastIndexOf("/") + 1);
 			return (AbstractProject) Hudson.getInstance().getItem(jobName);
 		}
diff --git a/src/main/java/com/tikal/jenkins/plugins/multijob/views/AbstractWrapper.java b/src/main/java/com/tikal/jenkins/plugins/multijob/views/AbstractWrapper.java
index a3a2e08..914e075 100644
--- a/src/main/java/com/tikal/jenkins/plugins/multijob/views/AbstractWrapper.java
+++ b/src/main/java/com/tikal/jenkins/plugins/multijob/views/AbstractWrapper.java
@@ -4,7 +4,7 @@ import java.io.File;
 import java.io.IOException;
 import java.util.List;
 
-import org.acegisecurity.AccessDeniedException;
+import org.springframework.security.AccessDeniedException;
 
 import hudson.model.HealthReport;
 import hudson.model.Hudson;
diff --git a/src/main/java/com/tikal/jenkins/plugins/multijob/views/ProjectWrapper.java b/src/main/java/com/tikal/jenkins/plugins/multijob/views/ProjectWrapper.java
index 0391abd..09792de 100644
--- a/src/main/java/com/tikal/jenkins/plugins/multijob/views/ProjectWrapper.java
+++ b/src/main/java/com/tikal/jenkins/plugins/multijob/views/ProjectWrapper.java
@@ -20,7 +20,7 @@ import java.io.IOException;
 import java.util.Collection;
 import java.util.List;
 
-import org.acegisecurity.AccessDeniedException;
+import org.springframework.security.AccessDeniedException;
 
 import com.tikal.jenkins.plugins.multijob.MultiJobProject;
 
diff --git a/src/test/java/com/tikal/jenkins/plugins/multijob/test/PhaseJobsConfigTest.java b/src/test/java/com/tikal/jenkins/plugins/multijob/test/PhaseJobsConfigTest.java
index c5978b6..ea7d331 100644
--- a/src/test/java/com/tikal/jenkins/plugins/multijob/test/PhaseJobsConfigTest.java
+++ b/src/test/java/com/tikal/jenkins/plugins/multijob/test/PhaseJobsConfigTest.java
@@ -28,7 +28,7 @@ import hudson.model.ParameterValue;
 import hudson.model.TaskListener;
 import hudson.model.AbstractBuild;
 import hudson.model.AbstractProject;
-import hudson.model.Cause.UserIdCause;
+import hudson.model.Cause.UserCause;
 import hudson.model.CauseAction;
 import hudson.model.FreeStyleProject;
 import hudson.model.Hudson;
@@ -313,7 +313,7 @@ public class PhaseJobsConfigTest extends HudsonTestCase{
 
 		@Override
 		public Action getAction(AbstractBuild<?, ?> build, TaskListener listener) throws IOException, InterruptedException {
-			return new CauseAction(new UserIdCause());
+			return new CauseAction(new UserCause());
 		}
 	}
 	/**
